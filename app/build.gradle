apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 30


    defaultConfig {
        applicationId "com.example.kotlindemo"
        minSdkVersion 21
        targetSdkVersion 21
        versionCode 1
        versionName "1.0"

        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath = true
                arguments = [AROUTER_MODULE_NAME: project.getName()]
                println(" ==================== > " + project.getName())
            }
        }
    }
    viewBinding {
        enabled = true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.4.20"
    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.1'
    // debugImplementation because LeakCanary should only run in debug builds.
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.7'

    implementation 'com.github.markzhai:blockcanary-android:1.5.0'
//    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.2'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.2'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
//    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    // kotlin 反射
    implementation "org.jetbrains.kotlin:kotlin-reflect:1.4.20"

    // kotlin json 版本
    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.0.1'
    // android KTX
    // implementation("androidx.core:core-ktx:1.6.0")
    // lifecycle coroutineScope
    implementation("androidx.lifecycle:lifecycle-runtime-ktx:2.4.0-alpha02")
    implementation("com.squareup.okhttp3:okhttp:4.9.0")
// https://mvnrepository.com/artifact/com.github.bumptech.glide/glide
    implementation group: 'com.github.bumptech.glide', name: 'glide', version: '4.11.0'
// https://mvnrepository.com/artifact/com.squareup.retrofit2/retrofit
    implementation group: 'com.squareup.retrofit2', name: 'retrofit', version: '2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.5.0'
    // butterknife
    implementation 'com.jakewharton:butterknife:10.2.3'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.2.3'

    // ARouter
    def aroute_version = '1.5.2'
    implementation "com.alibaba:arouter-api:$aroute_version"
    annotationProcessor "com.alibaba:arouter-compiler:$aroute_version"
    // ARouter
    if (arouteIsModule.toBoolean()) {
        implementation project(':aroute')
    }
}
